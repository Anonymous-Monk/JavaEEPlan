// 子查询
	// 创建表
create table `t_pricelevel` (
	`id` int ,
	`priceLevel` int ,
	`price` float ,
	`description` varchar (300)
); 
insert into `t_pricelevel` (`id`, `priceLevel`, `price`, `description`) values('1','1','80.00','价格贵的书');
insert into `t_pricelevel` (`id`, `priceLevel`, `price`, `description`) values('2','2','60.00','价格适中的书');
insert into `t_pricelevel` (`id`, `priceLevel`, `price`, `description`) values('3','3','40.00','价格便宜的书');

// 1.带IN关键字的子查询
一个查询语句的条件可能落在另一个SELECT语句的查询结果
[例如: SELECT * FROM t_book WHERE bookTypeId NOT IN (SELECT id FROM t_booktype);]

// 2.带比较运算符的子查询
子查询可以使用比较运算符
[例如: SELECT * FROM t_book WHERE price >= (SELECT price FROM t_pricelevel WHERE priceLevel = 1);]

// 3.带EXISTS关键字的子查询
假如子查询查询到记录, 则进行外层查询, 否则, 不执行外层查询
[例如: SELECT * FROM t_book WHERE EXISTS (SELECT * FROM t_booktype);](子查询不为空, 所以EXISTS为TRUE, 执行外层查询)
[例如: SELECT * FROM t_book WHERE NOT EXISTS (SELECT * FROM t_booktype);](子查询不为空, 所以NOT EXISTS为FALSE, 不执行外层查询)

// 4.带ANY关键字的子查询
ANY关键字表示满足其中任一条件
[例如: SELECT * FROM t_book WHERE price >= ANY (SELECT price FROM t_pricelevel)](价格大于40或60或80)

// 5.带ALL关键字的子查询
ALL关键字表示满足所有的条件
[例如: SELECT * FROM t_book WHERE price >= ALL (SELECT price FROM t_pricelevel)](价格大于40, 60, 80)