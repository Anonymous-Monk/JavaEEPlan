// 创建存储过程和函数
CREATE PROCEDURE sp_name([proc_parameter[,...]])
	[characteristic...] routine_body
sp_name参数: 存储过程的名称
proc_parameter: 存储过程的参数列表
characteristic: 指定存储过程的特性
routine_body: SQL代码内容, 可以用BEGIN...END来标识SQL代码的开始和结束
proc_parameter 中的每个参数由三部分组成: 输入输出类型, 参数名称, 参数类型
[IN | OUT | INOUT] param_name type
IN表示输入参数, OUT表示输出参数, INOUT表示输入输出参数
param_name: 存储过程的参数名称
type: 存储过程的参数类型, 该类型可以使MySQL数据库的任意数据类型
characteristic取值:
	LANGUAGE SQL: 说明routine_body部分是由SQL语言的语句组成
	[NOT] DETERMINSTIC: 指明存储过程的执行结果是否确定.
		DETERMINSTIC 表示结果确定, 每次执行存储过程时, 相同的输入会得到相同的输出.
		NOT DETERMINSTIC(默认情况) 表示结果非确定, 每次执行存储过程时, 相同的输入可能得到不同的输出.
{CONTAINS SQL | NO SQL | READS SQL DATA | MODIFIES SQL DATA}: 指明子程序使用SQL语句的限制
	CONTAINS SQL(默认): 包含SQL语句, 但不包含读或写数据的语句
	NO SQL: 不包含SQL语句
	READS SQL DATA: 包含读数据的语句
	MODIFIES SQL DATA: 包含写数据的语句
SQL SECURITY{DEFINER | INVOKER}; 指明谁有权限执行
DEFINER(默认): 只有定义者自己才能够执行
INVOKER: 调用者可以执行
COMMENT 'string': 注释信息
[例如: 
// 创建存储过程
DELIMITER |
CREATE PROCEDURE pro_book (IN bT INT, OUT count_num INT)
	READS SQL DATA
	BEGIN
		SELECT COUNT(*) FROM t_book WHERE bookTypeId = bT;
	END
|
DELIMITER ;
// 调用存储过程
CALL pro_book(1,@total);
]

// 创建存储函数
CREATE FUNCTION sp_name(func_parameter[,...])
	RETURNS type
	[characteristic...] routine_body
sp_name: 存储函数名称
func_parameter: 存储函数的参数列表
RETURNS type: 返回值的类型
characteristic: 指定存储过程的特性
	LANGUAGE SQL: 说明routine_body部分是由SQL语言的语句组成
	[NOT] DETERMINSTIC: 指明存储过程的执行结果是否确定.
		DETERMINSTIC 表示结果确定, 每次执行存储过程时, 相同的输入会得到相同的输出.
		NOT DETERMINSTIC(默认情况) 表示结果非确定, 每次执行存储过程时, 相同的输入可能得到不同的输出.
routine_body: SQL代码内容, 可以用BEGIN...END来标识SQL代码的开始和结束
param_name: 存储过程的参数名称
type: 存储过程的参数类型, 该类型可以使MySQL数据库的任意数据类型
[例如:
// 创建存储函数
DELIMITER |
CREATE FUNCTION func_book (bookId INT)
RETURNS VARCHAR(20)
BEGIN
	RETURN (SELECT bookName FROM t_book WHERE id = bookId);
END
|
DELIMITER ;
// 调用存储函数
SELECT func_book(2);
]